tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.rpi.RPiMinIOBucketNotification_w1-wip1:
    derived_from: tosca.nodes.SoftwareComponent
    metadata:
      targetNamespace: "radon.nodes.rpi"
      abstract: "false"
      final: "false"
    properties:
      node_ip:
        type: string
        description: IP of the VM running the OpenFaaS
      function_name:
        type: string
        description: The name of the deployed OpenFaaS function
      minio_user:
        type: string
        description: MiniIO username
      minio_password:
        type: string
        description: MiniIO password
      bucket_in_name:
        type: string
        description: The name of incoming the bucket
    attributes:
      node_ip:
        type: string
      function_name:
        type: string
      credentials:
        type: string
      bucket_in_name:
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          node_ip: {default: { get_property: [SELF, node_ip] }, type: string }
          function_name: {default: { get_property: [SELF, function_name] }, type: string }
          minio_user: {default: { get_property: [SELF, minio_user] }, type: string }
          minio_password: {default: { get_property: [SELF, minio_password] }, type: string }          
          bucket_in_name: {default: { get_property: [SELF, bucket_in_name] }, type: string }
        operations:
          create:
            implementation:
              primary: create
              dependencies:
                - bucket-notification
          delete:
            implementation: delete
    artifacts:
      create:
        type: radon.artifacts.Ansible
        file: create.yml
      delete:
        type: radon.artifacts.Ansible
        file: remove.yml
      bucket-notification:
        type: tosca.artifacts.Implementation.Python
        file: bucket-notification.py
